c!
n
user.accepted?
user&.authenticate(params[:password])
n
user.accepted?
user&.authenticate(params[:password])
user = User.find_by(email: params[:email])
user = User.find_by(email: params[:email]
c!
user.admin?
user && user.authenticate(params[:password])
user = User.find_by(email: params[:email])
c!
user.admin?
user && user.authenticate(params[:password])
  user = User.find_by(email: params[:email])
c!
render json: { token: token }
ender json: { token: token }
n
  token = JWT.encode({ user_id: user.id }, Rails.application.secrets.secret_key_base, 'HS256')
token = JWT.encode({ user_id: user.id }
token
JWT.encode({ user_id: user.id }
user&.authenticate(params[:password])
user = User.find_by(email: params[:email])
c!
token = JWT.encode({ user_id: user.id }
n
user&.authenticate(params[:password])
 user = User.find_by(email: params[:email])
c!
token = JWT.encode({ user_id: user.id }
user&.authenticate(params[:password])
 user = User.find_by(email: params[:email])
c!
 user = User.find_by(email: params[:email])
c!
User.find_by(email: params[:email])
 user = User.find_by(email: params[:email])
c!
token = JWT.encode({ user_id: user.id }, Rails.application.secrets.secret_key_base, 'HS256')
token = JWT.encode({ user_id: user.id }
user&.authenticate(params[:password])
user = User.find_by(email: params[:email])
c!
params([:password])
params[:password])
user&.authenticate(params[:password])
user = User.find_by(email: params[:email])
c!
  token = JWT.encode({ user_id: user.id }
user&.authenticate(params[:password])
 user = User.find_by(email: params[:email])
User.find_by(email: params[:email])
c!
 User.find_by(email: params[:email])
params[:email]
 User.find_by(email: params[:email])
user
user = User.find_by(email: params[:email])
user
User.find_by(email: params[:email])
user&.authenticate(params[:password])
user = User.find_by(email: params[:email])
